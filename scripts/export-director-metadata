#!/usr/bin/env bash
set -x

set -eu
set -o pipefail

function cleanup_socks_proxy {
  kill "$ssh_socks_proxy_pid"
}

# shellcheck disable=SC1090
source "$(dirname "${BASH_SOURCE[0]}")/om-cmd"

BOSH_CA_CERT_PATH="${PWD}/bosh.crt"

if om_cmd curl -p /api/v0/deployed/director/credentials/uaa_bbr_client_credentials > /dev/null; then
  echo "Retreving BBR client credentials for BOSH Director"
  om_cmd curl -p /api/v0/deployed/director/credentials/uaa_bbr_client_credentials > bbr_client.json
  BOSH_CLIENT="$(jq -r .credential.value.identity bbr_client.json)"
  BOSH_CLIENT_SECRET="$(jq -r .credential.value.password bbr_client.json)"

  bosh_product_guid="$(om_cmd curl -p /api/v0/deployed/products | jq -r '.[] | select(.type=="p-bosh") | .guid')"
  BOSH_ENVIRONMENT="$(om_cmd curl -p "/api/v0/deployed/products/${bosh_product_guid}/static_ips" | jq -r .[0].ips[0])"

  om_cmd curl -p /api/v0/certificate_authorities | jq -r '.certificate_authorities | last.cert_pem' > "$BOSH_CA_CERT_PATH"
else
  echo "Retreving Ops Manager client credentials for BOSH Director"
  om_cmd curl -p /api/v0/deployed/director/manifest > director_manifest.json

  BOSH_CLIENT="ops_manager"
  BOSH_CLIENT_SECRET=$(jq -r '.jobs[] | select(.name == "bosh") | .properties.uaa.clients.ops_manager.secret' director_manifest.json)
  BOSH_ENVIRONMENT=$(jq -r '.jobs[] | select(.name == "bosh") | .properties.director.address' director_manifest.json)

  jq -r '.jobs[] | select(.name == "bosh") | .properties.director.config_server.ca_cert' director_manifest.json > "${BOSH_CA_CERT_PATH}"
fi

# Get BOSH Director private key
om_cmd curl -p /api/v0/deployed/director/credentials/bbr_ssh_credentials > bbr_keys.json
BOSH_PRIVATE_KEY=$(jq -r '.credential.value.private_key_pem' bbr_keys.json)

if [ ! -z ${OPSMAN_PRIVATE_KEY:+x} ]; then
  echo -e "$OPSMAN_PRIVATE_KEY" > "${PWD}/ssh.key"
  chmod 0600 "${PWD}/ssh.key"
  opsman_private_key_path="${PWD}/ssh.key"
  opsman_host="$(basename "$OPSMAN_URL")"
  ssh -4 -D 5000 -NC "ubuntu@${opsman_host}" -i "${opsman_private_key_path}" -o ServerAliveInterval=60 -o StrictHostKeyChecking=no &
  ssh_socks_proxy_pid="$!"
  trap cleanup_socks_proxy EXIT
  export BOSH_ALL_PROXY=socks5://localhost:5000
  echo "testesttest"
  echo "Using BOSH_ALL_PROXY"
  echo "sleeping for 10 secs to establish connection"
  sleep 10s
  echo "test1test1test1"
fi

# Set NO_PROXY for BOSH Director
if [ ! -z ${SET_NO_PROXY:+x} ] && [ $SET_NO_PROXY = true ]; then
    export NO_PROXY="${BOSH_ENVIRONMENT},${NO_PROXY:=${no_proxy:=}}"
    echo "exporting NO_PROXY=${NO_PROXY}"
fi

export BOSH_CLIENT
export BOSH_CLIENT_SECRET
export BOSH_CA_CERT_PATH
export BOSH_CA_CERT=$BOSH_CA_CERT_PATH
export BOSH_ENVIRONMENT
export BOSH_USERNAME="bbr"
export BOSH_PRIVATE_KEY

echo $BOSH_CLIENT
echo $BOSH_CLIENT_SECRET
echo $BOSH_CA_CERT_PATH
echo $BOSH_ENVIRONMENT
cat $BOSH_CA_CERT_PATH
echo $BOSH_PRIVATE_KEY

